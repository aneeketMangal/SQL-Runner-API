package assignment_1;

import java.util.Date;

public class anee{
    public int actor_id;
    public String first_name;
    public String last_name;
    public Date last_update;
}



// /*
//  * This Java source file was generated by the Gradle 'init' task.
//  */
// package assignment_1;

// import java.lang.reflect.Field;
// import java.lang.reflect.InvocationTargetException;
// import java.lang.reflect.Method;
// import java.sql.Connection;
// import java.sql.DriverManager;
// import java.sql.ResultSet;
// import java.sql.ResultSetMetaData;
// import java.sql.SQLException;
// import java.sql.Statement;
// import java.util.AbstractCollection;
// import java.util.ArrayList;
// import java.util.Arrays;
// import java.util.Collection;
// import java.util.HashSet;
// import java.util.Iterator;
// import java.util.LinkedList;
// import java.util.List;
// import java.util.PriorityQueue;
// import java.util.Queue;

// import javax.print.DocFlavor.STRING;
// import javax.print.attribute.HashAttributeSet;

// import assignment_1.exceptions.DatabaseNotConnectedException;
// import assignment_1.exceptions.MultipleResultsFound;
// import assignment_1.exceptions.ParamTypeDifferentException;
// import assignment_1.interfaces.SqlRunner;
// import assignment_1.model.QueryObject;
// import assignment_1.service.ReplaceUtility;
// import assignment_1.service.XMLParser;

// public class Library implements SqlRunner {

//     public Connection connection;
//     public String xmlFilePath;
//     public XMLParser xmlParser;
//     public ReplaceUtility ru;

//     // Constructor for library Object
//     public Library(Connection connection, String filePath) {
//         this.connection = connection;
//         this.xmlFilePath = filePath;
//     }

//     // Method to check if the connection object is present
//     public void checkConnection() {
//         if (connection == null) {
//             throw new DatabaseNotConnectedException("Database not connected");
//         }
//     }

//     public <T> void checkParamTypes(QueryObject qObj, T queryParam) {
//         String paramType = queryParam.getClass().getName();
//         String paramTypeInXML = qObj.paramType;
//         System.out.println(paramType);
//         System.out.println(paramType + " " + paramTypeInXML);
//         if (!paramType.equals(paramTypeInXML)) {
//             throw new ParamTypeDifferentException(paramType, paramType, qObj.id);
//         }
//     }

//     public <T> String populateQuery(QueryObject qObj, T queryParam) {
//         // TODO: Implement this method
//         // this.checkParamTypes(qObj, queryParam);

//         String populatedQuery = qObj.query;
//         Object paramObject = (Object)queryParam;

//         if(populatedQuery == "fds"){
            
//         }
//         // for user defined classes
//         else{
//             // fetching the fields of the class
//             Field[] fields = queryParam.getClass().getDeclaredFields();
//             for (Field field : fields) {
//                 Object fieldObject = field;
//                 String fieldName = field.getName();
//                 field.getClass();
//                 // String fieldClass = field.getType().getName();
//                 String fieldValue = null;
//                 try {
//                     fieldValue = (String) field.get(queryParam);
//                     populatedQuery = ru.replaceUtility(fieldObject, populatedQuery, fieldName);
//                     // if (fieldClass.equals("String")) {
//                     //     populatedQuery = populatedQuery.replace("${" + fieldName + "}", "\"" + fieldValue + "\"");
//                     // } else {
//                     //     populatedQuery = populatedQuery.replace("${" + fieldName + "}", fieldValue);
//                     // }
//                 } catch (IllegalArgumentException | IllegalAccessException e) {
//                     throw (new RuntimeException(e));
//                 }
//             }
//         }
//         return populatedQuery;
//     }

//     public static void main(String[] args) {

//         Integer a = 5;
//         int b = 3;
//         String c = "hello";
//         anee d = new anee();
//         Boolean dd= true;
//         float ee = 23.4f;
//         double ff = 23.4;
//         String [] e = {"anee", "temp", "funny"};
//         Integer [] eef = {1, 2, 3};
//         char [] eeef = {'a', 'b', 'c'};
//         String q = "SELECT * FROM books WHERE id = ${id};";
//         ReplaceUtility rr = new ReplaceUtility();

//         Collection<String> collection = new PriorityQueue<String>();
 
//         // System.out.println(collection.getClass().getName());
//         // collection.add("anee");
//         // collection.add("gunny");
//         // collection.add("temp");
        
 
//         // Iterator<?> iterator = collection.iterator();
 
//         // // while loop
//         // while (iterator.hasNext()) {
//         // System.out.println("value= " + iterator.next().getClass().getName());
        
//         // }
    
//         // System.out.println(rr.replaceUtility(((Object)e), q, "id"));
//         System.out.println(rr.replaceUtility(((Object)eef), q, "id"));
//         // System.out.println(rr.replaceUtility(((Object)dd).getClass().getName(), q, "id", "1"));
//         // System.out.println(rr.replaceUtility(((Object)ee).getClass().getName(), q, "id", "1"));
//         // System.out.println(rr.replaceUtility(((Object)ff).getClass().getName(), q, "id", "1"));

//         // try {
//         //     Class.forName("com.mysql.cj.jdbc.Driver");
//         // } catch (ClassNotFoundException e) {
//         //     // TODO Auto-generated catch block
//         //     e.printStackTrace();
//         // }  
//         // Connection c;
//         // System.out.println("fds");
//         // try {
//         //     c = DriverManager.getConnection("jdbc:mysql://localhost:3306/sakila?user=root&password=papamangal&useUnicode=true&characterEncoding=UTF-8");
//         //     Library library = new Library(c, "src/main/resources/assignment_1/queries.xml");
//         //     QueryObject queryObject = library.xmlParser.getQueryObject("findMovies");
//         //     String finalQuery = library.populateQuery(queryObject, new anee());
//         //     System.out.println(finalQuery);
//         // } catch (SQLException e) {
//         //     // TODO Auto-generated catch block
//         //     e.printStackTrace();
//         // }  
//         // try (
//         //     Statement statement;
//         //     statement = library.connection.createStatement();
//         //     ResultSet resultSet = statement.executeQuery(finalQuery);
//         // } catch (SQLException e) {
//         //     // TODO Auto-generated catch block
//         //     e.printStackTrace();
//         // }

//         // QueryObject qObj = new QueryObject(
//         //         "findMovies",
//         //         "java.lang.String",
//         //         "SELECT a, b, c FROM my_table WHERE x=${value};"

//         // );
//         // int[] arr = { 2, 3, 4};
//         // ArrayList<String> list = new ArrayList<String>();
//         // list.add("anee");
//         // System.out.println(new Library(null, "").populateQuery(qObj, arr));

//         // ArrayList<String> list = new ArrayList<String>();
//         // list.add("aneeket");
//         // list.add("banawat");
//         // String[] arr = new String[2];
//         // arr[0] = "anee";
//         // arr[1] = "temp";

//         // System.out.println(Arrays.toString(list.toArray()));
//         // System.out.println(arr.getClass().isArray() + " ---" + Arrays.toString(arr));
//         // boolean isCollection = Collection.class.isAssignableFrom(list.getClass());

//         // System.out.println(isCollection);
//         // System.out.println(a.getClass().getSimpleName() + " --" +a.toString());
//     }

//     @Override
//     public <T, R> R selectOne(String queryId, T queryParam, Class<R> resultType) {
//         try {
//             ResultSet resultSet = this.runSelectQuery(queryId, queryParam);
//             ResultSetMetaData resultMeta = resultSet.getMetaData();
//             int columnCount = resultMeta.getColumnCount();
//             resultSet.last();
//             int resultCount = resultSet.getRow();
//             if (resultCount == 0) {
//                 return null;
//             } else if (resultCount == 1) {
//                 resultSet.first();
//                 String [] columnNames = new String[columnCount];
//                 Field [] fields = resultType.getDeclaredFields();
//                 for (int i = 1; i <= columnCount; i++) {
//                     // field.set(classObject, value);
//                     columnNames[i-1] = resultMeta.getColumnName(i);
//                     System.out.println(columnNames[i-1]);
//                 }
                
//                 for(int i  =0 ; i<columnCount; i++){
//                     Object value = resultSet.getObject(i+1);
//                     fields[i].getClass().cast(value);
//                 }
//                 R result = resultType.getDeclaredConstructor().newInstance();
//                 return result;
            
//             } else {
//                 throw new MultipleResultsFound(queryId);
//             } 
            
//         } catch (ClassCastException | IllegalArgumentException | SecurityException | InstantiationException | SQLException
//                 | IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {
//             throw new RuntimeException(e);
//         }

//     }

//     @Override
//     public <T, R> List<R> selectMany(String queryId, T queryParam, Class<R> resultType) {
//         try {
//             ResultSet resultSet = this.runSelectQuery(queryId, queryParam);
//             List<R> result = new ArrayList<R>();

//             while (resultSet.next()) {
//                 R newR = resultType.getDeclaredConstructor().newInstance();
//                 result.add(newR);
//             }
//             return result;
//         } catch (IllegalArgumentException | SecurityException | SQLException | InstantiationException
//                 | IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {
//             throw new RuntimeException(e);
//         }
//     }

//     public <T> int runCountQuery(String queryId, T queryParam) {
//         try {
//             this.checkConnection();
//             QueryObject queryObject = this.xmlParser.getQueryObject(queryId);
//             String finalQuery = this.populateQuery(queryObject, queryParam);
//             Statement statement;
//             statement = this.connection.createStatement();
//             int countAffectedRows = statement.executeUpdate(finalQuery);
//             return countAffectedRows;
//         } catch (SQLException e) {
//             throw new RuntimeException(e);
//         }
//     }

//     public <T> ResultSet runSelectQuery(String queryId, T queryParam) {
//         try {
//             this.checkConnection();
//             QueryObject queryObject = this.xmlParser.getQueryObject(queryId);
//             String finalQuery = this.populateQuery(queryObject, queryParam);
//             Statement statement;
//             statement = this.connection.createStatement();
//             ResultSet resultSet = statement.executeQuery(finalQuery);
//             return resultSet;
//         } catch (SQLException e) {
//             throw new RuntimeException(e);
//         }
//     }

//     @Override
//     public <T> int insert(String queryId, T queryParam) {
//         try {
//             return this.runCountQuery(queryId, queryParam);
//         } catch (IllegalArgumentException | SecurityException e) {
//             throw (new RuntimeException(e));
//         }
//     }

//     @Override
//     public <T> int delete(String queryId, T queryParam) {
//         try {
//             return this.runCountQuery(queryId, queryParam);
//         } catch (IllegalArgumentException | SecurityException e) {
//             throw (new RuntimeException(e));
//         }
//     }

//     @Override
//     public <T> int update(String queryId, T queryParam) {
//         try {
//             return this.runCountQuery(queryId, queryParam);
//         } catch (IllegalArgumentException | SecurityException e) {
//             throw (new RuntimeException(e));
//         }
//     }
// }


// public <T> Class<?> toClass(int type, T object) {
//     Class<?> result = Object.class;

//     switch (type) {
//         case Types.CHAR:
//         case Types.VARCHAR:
//         case Types.LONGVARCHAR:
//             result = String.class;
//             break;

//         case Types.NUMERIC:
//         case Types.DECIMAL:
//             result = java.math.BigDecimal.class;
//             break;

//         case Types.BIT:
//             result = Boolean.class;
//             break;

//         case Types.TINYINT:
//             result = Byte.class;
//             break;

//         case Types.SMALLINT:
//             result = Short.class;
//             break;

//         case Types.INTEGER:
//             result = Integer.class;
//             break;

//         case Types.BIGINT:
//             result = Long.class;
//             break;

//         case Types.REAL:
//         case Types.FLOAT:
//             result = Float.class;
//             break;

//         case Types.DOUBLE:
//             result = Double.class;
//             break;

//         case Types.BINARY:
//         case Types.VARBINARY:
//         case Types.LONGVARBINARY:
//             result = Byte[].class;
//             break;

//         case Types.DATE:
//             result = java.sql.Date.class;
//             break;

//         case Types.TIME:
//             result = java.sql.Time.class;
//             break;

//         case Types.TIMESTAMP:
//             result = java.sql.Timestamp.class;
//             break;
//     }

//     return result;
// }